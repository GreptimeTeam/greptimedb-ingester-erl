name: Erlang CI

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

jobs:

  build:

    runs-on: ubuntu-latest
    container:
      image: erlang:27.2

    steps:
    - uses: actions/checkout@v3
    - name: Setup greptimedb
      run: |
        GREPTIMEDB_VER=v0.14.2
        DOWNLOAD_URL=https://github.com/GreptimeTeam/greptimedb
        curl -L ${DOWNLOAD_URL}/releases/download/${GREPTIMEDB_VER}/greptime-linux-amd64-${GREPTIMEDB_VER}.tar.gz -o /tmp/greptimedb-${GREPTIMEDB_VER}-linux-amd64.tar.gz
        mkdir -p /tmp/greptimedb-download
        tar xzvf /tmp/greptimedb-${GREPTIMEDB_VER}-linux-amd64.tar.gz -C /tmp/greptimedb-download
        rm -f /tmp/greptimedb-${GREPTIMEDB_VER}-linux-amd64.tar.gz
        nohup /tmp/greptimedb-download/greptime-linux-amd64-${GREPTIMEDB_VER}/greptime standalone start --user-provider=static_user_provider:cmd:greptime_user=greptime_pwd > /tmp/greptimedb.log 2>&1 &
    - name: Compile
      run: rebar3 compile
    - name: Run tests
      env:
        GT_TEST_HOST: ${{ secrets.GT_TEST_HOST }}
        GT_TEST_DB: ${{ secrets.GT_TEST_DB }}
        GT_TEST_USER: ${{ secrets.GT_TEST_USER }}
        GT_TEST_PASSWD: ${{ secrets.GT_TEST_PASSWD }}
      run: |
        cat /tmp/greptimedb.log
        rebar3 ct -v --cover
    - name: Dialyzer
      run: rebar3 dialyzer
    - name: Coveralls
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        GT_TEST_HOST: ${{ secrets.GT_TEST_HOST }}
        GT_TEST_DB: ${{ secrets.GT_TEST_DB }}
        GT_TEST_USER: ${{ secrets.GT_TEST_USER }}
        GT_TEST_PASSWD: ${{ secrets.GT_TEST_PASSWD }}
      run: rebar3 as test coveralls send
